[{"content":"How\u0026rsquo;s it going yall. Lets learn Go\u0026rsquo;s basics today! Alright, let\u0026rsquo;s dive into the absolute basics of Go! Think of this as your \u0026ldquo;Level 1\u0026rdquo; - getting comfy with the fundamentals. No scary stuff, promise!\nVariables \u0026amp; Constants: The Building Blocks First up, variables. In Go, you gotta declare \u0026rsquo;em before you use \u0026rsquo;em. Use the var keyword, give it a name, and tell Go what type it is[cite: 9, 21].\n1 2 3 4 5 6 7 8 9 10 11 12 // Declare an integer (Go has different sizes like int8, int16, int32, int64) var varInt int16 = 12 // Unsigned int - only positive numbers, but can hold bigger values! var intNum uint16 // Floats need a size too (float32 or float64) var floatNum float32 = 123456.9567 // Might lose some precision var float64Num float64 = 123456.9567 // More precise fmt.Println(varInt) // Output: 12 fmt.Println(float64Num) // Output: 123456.9567 Key Point: Go is strict! If you declare a variable, you have to use it. Keeps the code clean, no pointless variables hanging around. Also, you can\u0026rsquo;t mix types in operations directly (like adding an int and a float32) without converting first.\nYou can also let Go figure out the type using := (short assignment statement) - super handy! 1 2 myVar := \u0026#34;text\u0026#34; // Go knows this is a string fmt.Println(myVar) Strings: Strings are sequences of characters. Use double quotes \u0026quot;\u0026quot; for regular strings or backticks `` if you want Go to keep the exact formatting (like line breaks).\n1 2 3 4 5 6 7 var myString string = \u0026#34;Hello there!\u0026#34; var multiLineString string = `This string will keep its line breaks.` fmt.Println(myString) fmt.Println(multiLineString) Go strings are actually sequences of bytes, usually using UTF-8 encoding. We\u0026rsquo;ll dig into that more later, but for now, just know they can hold pretty much any character!\nQuick Peek: Booleans Simple true/false stuff. 1 2 var isCool bool = true fmt.Println(isCool) // Output: true That\u0026rsquo;s Wrap for Level 1! ","permalink":"http://localhost:1313/blogs/golang/go-basics/","summary":"\u003ch4 id=\"hows-it-going-yall-lets-learn-gos-basics-today\"\u003eHow\u0026rsquo;s it going yall. Lets learn Go\u0026rsquo;s basics today!\u003c/h4\u003e\n\u003cp\u003eAlright, let\u0026rsquo;s dive into the absolute basics of Go! Think of this as your \u0026ldquo;Level 1\u0026rdquo; - getting comfy with the fundamentals. No scary stuff, promise!\u003c/p\u003e\n\u003ch3 id=\"variables--constants-the-building-blocks\"\u003eVariables \u0026amp; Constants: The Building Blocks\u003c/h3\u003e\n\u003cp\u003eFirst up, variables. In Go, you gotta declare \u0026rsquo;em before you use \u0026rsquo;em. Use the \u003ccode\u003evar\u003c/code\u003e keyword, give it a name, and tell Go what \u003cem\u003etype\u003c/em\u003e it is[cite: 9, 21].\u003c/p\u003e","title":"Go Basics: Variables and Types"},{"content":"","permalink":"http://localhost:1313/blogs/cli-apps/password_generator/","summary":"","title":"Password Generating with cobra-cli library"},{"content":"Welcome, and thanks for stopping by.\nI\u0026rsquo;m Lahrasab, a curious mind navigating between technology and creativity.\nA full-stack developer, tech enthusiast, and an observer of systemsâ€”whether it\u0026rsquo;s code, people, or how things work.\nBy day, I work in vehicle tracking and fleet management, ensuring efficiency and safety with AI-powered monitoring systems. By night, I tinker with Go, HTMX, and Tailwind, crafting clean, efficient web applications.\nIn daily life, I delve into backend technologies (such as Go and microservice architecture), while also dedicating myself to frontend development and user experience design. I continuously learn the latest development tools and methods, and try to apply them to personal projects to improve efficiency. My academic and leisure interests revolve around technological innovation, which not only enriches my knowledge base but also helps me grow in team collaboration and project management.\nFeel free to reach out if youâ€™d like to discuss projects, collaboration opportunities, or just share insights. You can check out my detailed resume and portfolioâ€”available in both Chinese and Englishâ€”via the links below.\nFeel free to leave a messageâ€”I might not reply instantly, but I always read.\nConnect ðŸ“§ Email: lahrasab.ramzan36@egmail.com\nðŸ”— My Work: Portfolio Link\nðŸ“„ Resume: Resume\nLet\u0026rsquo;s connect, discuss, and build. ðŸš€\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eWelcome, and thanks for stopping by.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m \u003cstrong\u003eLahrasab\u003c/strong\u003e, a curious mind navigating between technology and creativity.\u003c/p\u003e\n\u003cp\u003eA full-stack developer, tech enthusiast, and an observer of systemsâ€”whether it\u0026rsquo;s code, people, or how things work.\u003c/p\u003e\n\u003cp\u003eBy day, I work in \u003cstrong\u003evehicle tracking and fleet management\u003c/strong\u003e, ensuring efficiency and safety with AI-powered monitoring systems. By night, I tinker with \u003cstrong\u003eGo, HTMX, and Tailwind\u003c/strong\u003e, crafting clean, efficient web applications.\u003c/p\u003e\n\u003cp\u003eIn daily life, I delve into backend technologies (such as Go and microservice architecture), while also dedicating myself to frontend development and user experience design. I continuously learn the latest development tools and methods, and try to apply them to personal projects to improve efficiency. My academic and leisure interests revolve around technological innovation, which not only enriches my knowledge base but also helps me grow in team collaboration and project management.\u003c/p\u003e","title":"About Me"},{"content":"From time to time I will come to the friends who have turned over the chain of friends. Some of the old friends\u0026rsquo; domain names or websites may be temporarily removed if they fail. Please leave a new site information ~ (no order in the following rankings)\nWant to be listed here? If you\u0026rsquo;d like to be added to this friends page, please send me the following information:\nYour name/nickname URL to your website A square avatar image (at least 100x100 pixels) A short description or slogan (keep it under 50 characters) You can contact me via email at your.email@example.com with the subject \u0026ldquo;Friend Link Request\u0026rdquo;.\nI typically add new friends within a week of receiving your information.\n","permalink":"http://localhost:1313/friends/","summary":"\u003cp\u003eFrom time to time I will come to the friends who have turned over the chain of friends. Some of the old friends\u0026rsquo; domain names or websites may be temporarily removed if they fail. Please leave a new site information ~ (no order in the following rankings)\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"want-to-be-listed-here\"\u003eWant to be listed here?\u003c/h2\u003e\n\u003cp\u003eIf you\u0026rsquo;d like to be added to this friends page, please send me the following information:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eYour name/nickname\u003c/li\u003e\n\u003cli\u003eURL to your website\u003c/li\u003e\n\u003cli\u003eA square avatar image (at least 100x100 pixels)\u003c/li\u003e\n\u003cli\u003eA short description or slogan (keep it under 50 characters)\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eYou can contact me via email at \u003ca href=\"mailto:your.email@example.com\"\u003eyour.email@example.com\u003c/a\u003e with the subject \u0026ldquo;Friend Link Request\u0026rdquo;.\u003c/p\u003e","title":"Friends"}]